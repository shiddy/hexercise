/* esm.sh - esbuild bundle(@radix-ui/react-toggle-group@1.1.0) denonext production */
import p from"../../../../../../esm.sh/preact@10.19.6/compat.js";
import{createContextScope as S}from"../../../../../../esm.sh/v132/_@radix-ui/react-context@1.0.1.js";
import{Primitive as T}from"../../../../../../esm.sh/v132/_@radix-ui/react-primitive@1.0.3.js";
import*as d from"../../../../../../esm.sh/v132/_@radix-ui/react-roving-focus@1.0.4.js";
import{createRovingFocusGroupScope as C}from"../../../../../../esm.sh/v132/_@radix-ui/react-roving-focus@1.0.4.js";
import{Toggle as V}from"../../../../../../esm.sh/v132/_@radix-ui/react-toggle@1.0.3.js";
import{useControllableState as I}from"../../../../../../esm.sh/v132/_@radix-ui/react-use-controllable-state@1.0.1.js";
import{useDirection as A}from"../../../../../../esm.sh/v132/_@radix-ui/react-direction@1.0.1.js";
import{jsx as l}from"../../../../../../esm.sh/preact@10.19.6/jsx-runtime.js";
var v="ToggleGroup",[_,q]=S(v,[C]),h=C(),G=p.forwardRef((e,r)=>{let{type:u,...t}=e;if(u==="single")return l(M,{...t,ref:r});if(u==="multiple")return l(w,{...t,ref:r});throw new Error(`Missing prop \`type\` expected on \`${v}\``)});G.displayName=v;var[R,x]=_(v),M=p.forwardRef((e,r)=>{let{value:u,defaultValue:t,onValueChange:a=()=>{},...n}=e,[s,o]=I({prop:u,defaultProp:t,onChange:a});return l(R,{scope:e.__scopeToggleGroup,type:"single",value:s?[s]:[],onItemActivate:o,onItemDeactivate:p.useCallback(()=>o(""),[o]),children:l(b,{...n,ref:r})})}),w=p.forwardRef((e,r)=>{let{value:u,defaultValue:t,onValueChange:a=()=>{},...n}=e,[s=[],o]=I({prop:u,defaultProp:t,onChange:a}),i=p.useCallback(c=>o((g=[])=>[...g,c]),[o]),f=p.useCallback(c=>o((g=[])=>g.filter(F=>F!==c)),[o]);return l(R,{scope:e.__scopeToggleGroup,type:"multiple",value:s,onItemActivate:i,onItemDeactivate:f,children:l(b,{...n,ref:r})})});G.displayName=v;var[D,E]=_(v),b=p.forwardRef((e,r)=>{let{__scopeToggleGroup:u,disabled:t=!1,rovingFocus:a=!0,orientation:n,dir:s,loop:o=!0,...i}=e,f=h(u),c=A(s),g={role:"group",dir:c,...i};return l(D,{scope:u,rovingFocus:a,disabled:t,children:a?l(d.Root,{asChild:!0,...f,orientation:n,dir:c,loop:o,children:l(T.div,{...g,ref:r})}):l(T.div,{...g,ref:r})})}),m="ToggleGroupItem",y=p.forwardRef((e,r)=>{let u=x(m,e.__scopeToggleGroup),t=E(m,e.__scopeToggleGroup),a=h(e.__scopeToggleGroup),n=u.value.includes(e.value),s=t.disabled||e.disabled,o={...e,pressed:n,disabled:s},i=p.useRef(null);return t.rovingFocus?l(d.Item,{asChild:!0,...a,focusable:!s,active:n,ref:i,children:l(P,{...o,ref:r})}):l(P,{...o,ref:r})});y.displayName=m;var P=p.forwardRef((e,r)=>{let{__scopeToggleGroup:u,value:t,...a}=e,n=x(m,u),s={role:"radio","aria-checked":e.pressed,"aria-pressed":void 0},o=n.type==="single"?s:void 0;return l(V,{...o,...a,ref:r,onPressedChange:i=>{i?n.onItemActivate(t):n.onItemDeactivate(t)}})}),z=G,H=y;export{H as Item,z as Root,G as ToggleGroup,y as ToggleGroupItem,q as createToggleGroupScope};
//# sourceMappingURL=react-toggle-group.mjs.map